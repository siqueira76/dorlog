Prompt Detalhado de Refatora√ß√£o: Elimina√ß√£o de Dados Hardcoded
üéØ Objetivo da Refatora√ß√£o
Substituir valores hardcoded no template HTML por dados reais j√° calculados, mantendo robustez e mostrando "Dados insuficientes para an√°lise" apenas quando dados genuinamente n√£o existem.

üîç Escopo e Arquivos Afetados
ARQUIVO PRINCIPAL:

client/src/services/enhancedHtmlTemplate.ts - MODIFICAR (template HTML)
ARQUIVOS DE REFER√äNCIA:

client/src/services/enhancedReportAnalysisService.ts - APENAS LEITURA (fonte dos dados reais)
client/src/services/patternDetectionService.ts - APENAS LEITURA (an√°lises complementares)
ARQUIVOS PROIBIDOS:

package.json, vite.config.ts, drizzle.config.ts - N√ÉO MODIFICAR
üõ†Ô∏è Fun√ß√µes Auxiliares Necess√°rias
Criar no topo do arquivo enhancedHtmlTemplate.ts:

// Helpers para verifica√ß√£o de dados e formata√ß√£o
const hasData = (arrOrNum: any, min: number = 1): boolean => {
  if (Array.isArray(arrOrNum)) return arrOrNum.length >= min;
  return typeof arrOrNum === 'number' && !isNaN(arrOrNum);
};
const fmtPct = (num: number): string => {
  return isFinite(num) ? `${Math.round(num)}%` : 'Dados insuficientes para an√°lise';
};
const safe = <T>(value: T | null | undefined, render: (v: T) => string): string => {
  return value != null ? render(value) : 'Dados insuficientes para an√°lise';
};
üéØ Mapeamento de Dados: Hardcoded ‚Üí Real
1. Padr√µes Temporais
// ‚ùå ATUAL (Hardcoded)
<span class="period-percentage">20%</span>  <!-- Manh√£ -->
<span class="period-percentage">43%</span>  <!-- Tarde -->
<span class="period-percentage">30%</span>  <!-- Noite -->
<span class="period-percentage">7%</span>   <!-- Madrugada -->
// ‚úÖ REFATORADO (Dados Reais)
${safe(crisisTemporalAnalysis?.riskPeriods?.morning?.percentage, 
  p => `${Math.round(p)}%`)}
${safe(crisisTemporalAnalysis?.riskPeriods?.afternoon?.percentage, 
  p => `${Math.round(p)}%`)}
FONTE: reportData.crisisTemporalAnalysis.riskPeriods
FALLBACK: Se n√£o existir, usar calculateRiskPeriods(reportData)
CRIT√âRIO: M√≠nimo 3 crises para an√°lise v√°lida

2. Correla√ß√£o de Atividade
// ‚ùå ATUAL (Fallback fixo)
${activityCorrelation || 0.71}
// ‚úÖ REFATORADO (Dados Reais)
${safe(
  reportData.physicalActivityAnalysis?.weeklyAverageCorrelation ?? 
  calculateActivityPainCorrelation(reportData),
  v => v.toFixed(2)
)}
FONTE: reportData.physicalActivityAnalysis
CRIT√âRIO: M√≠nimo 5 dias de dados para correla√ß√£o v√°lida

3. Atividades F√≠sicas
// ‚ùå ATUAL (Fun√ß√£o ignorada)
const activities = extractPhysicalActivities(reportData);
// Template ignora e usa textos fixos
// ‚úÖ REFATORADO (Usar resultado da fun√ß√£o)
${hasData(activities, 1) ? 
  activities.map(act => `
    <div class="activity-item">
      <div class="activity-name">${act.name}</div>
      <div class="activity-frequency">${act.frequency}x por semana</div>
      <div class="activity-impact">${act.impact}</div>
    </div>
  `).join('') : 
  '<p>Dados insuficientes para an√°lise de atividades f√≠sicas</p>'
}
4. Insights e Recomenda√ß√µes
// ‚ùå ATUAL (Textos gen√©ricos)
<div class="insight-primary">Hor√°rio de risco: 13h-15h</div>
// ‚úÖ REFATORADO (Insights reais)
${reportData.smartSummary?.keyFindings?.length > 0 ?
  reportData.smartSummary.keyFindings.map(finding => `
    <div class="insight-primary">${finding}</div>
  `).join('') :
  '<p>Dados insuficientes para gerar insights personalizados</p>'
}
üîß Mudan√ßas por Se√ß√£o
generateTemporalPatternsSection()
Substituir hardcoded 20/43/30/7% por crisisTemporalAnalysis.riskPeriods
Mapear per√≠odos: Manh√£(6-11h), Tarde(12-17h), Noite(18-23h), Madrugada(0-5h)
Crit√©rio m√≠nimo: 3+ crises para an√°lise temporal v√°lida
Fallback: "Dados insuficientes para an√°lise temporal"
generatePhysicalActivitySection()
Eliminar || 0.71 fallback da correla√ß√£o
Usar physicalActivityAnalysis.activePercentage real
Popula√ß√£o da lista com activityBreakdown real
Recomenda√ß√µes baseadas em activityLevel calculado
Crit√©rio m√≠nimo: 5+ dias de dados para an√°lise v√°lida
generateDigestiveHealthSection()
Usar digestiveAnalysis.frequency real (j√° implementado corretamente)
Manter l√≥gica existente (n√£o hardcoded)
generateCrisisEpisodesSection()
Usar crisisTemporalAnalysis.peakHours reais
Insights de crisisTemporalAnalysis.insights
Eliminar textos fixos de fatores de risco
üö® Regras Cr√≠ticas de Implementa√ß√£o
1. Sem√¢ntica de Fallback
// ‚ùå ERRADO (Trata 0 como aus√™ncia)
${value || 'fallback'}
// ‚úÖ CORRETO (Apenas null/undefined s√£o aus√™ncia)
${value ?? 'fallback'}
2. Verifica√ß√£o de Amostras M√≠nimas
// Para an√°lises estat√≠sticas v√°lidas
const MIN_CRISIS_SAMPLE = 3;
const MIN_ACTIVITY_DAYS = 5;
const MIN_PAIN_RECORDS = 7;
3. Preserva√ß√£o da Estrutura HTML
N√ÉO alterar classes CSS existentes
N√ÉO modificar estrutura de divs
APENAS substituir conte√∫do de texto/valores
4. Robustez do Streaming
// Cada se√ß√£o do generator deve ser robusta
yield {
  id: 'temporal-patterns',
  content: safeGenerateTemporalSection(reportData), // Nunca throw
  order: 3.3
};
‚úÖ Crit√©rios de Aceita√ß√£o
‚ùå Zero valores hardcoded num√©ricos no template final
‚úÖ Dados reais mostrados quando dispon√≠veis e suficientes
‚úÖ "Dados insuficientes" apenas quando genuinamente n√£o h√° dados
‚úÖ HTML v√°lido em todos os cen√°rios (dados ricos, esparsos, ausentes)
‚úÖ Generator streaming funciona sem errors
‚úÖ Paridade visual mantida (apenas valores mudam)
üß™ Cen√°rios de Teste
Teste 1: Dados Ricos
Usu√°rio com 20+ dias de registros
Resultado esperado: Todos os percentuais e correla√ß√µes reais
Teste 2: Dados Esparsos
Usu√°rio com 2-5 dias de registros
Resultado esperado: Mix de dados reais e "dados insuficientes"
Teste 3: Dados Ausentes
Usu√°rio novo sem registros
Resultado esperado: Todas as se√ß√µes mostram "dados insuficientes"
Teste 4: Dados Edge Cases
Correla√ß√£o = 0.00 (leg√≠tima)
Resultado esperado: Mostra "0%" n√£o "dados insuficientes"
üéØ Pr√≥ximos Passos de Implementa√ß√£o
Auditoria completa de valores hardcoded em enhancedHtmlTemplate.ts
Implementa√ß√£o de helpers de verifica√ß√£o e formata√ß√£o
Refatora√ß√£o se√ß√£o por se√ß√£o com testes incrementais
QA manual com datasets variados
Valida√ß√£o final de todos os cen√°rios de teste